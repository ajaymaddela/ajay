---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  labels: 
    env: prod 
spec:
  minReadySeconds: 5
  replicas: 1
  updateStrategy:
    type: RollingUpdate 
    rollingUpdate: 
      maxUnavailable: 10%
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      env: prod 
  serviceName: rabbitmq-svc
  template: 
    metadata:
      name: rabbitmq
      labels:
        env: prod 
    spec:
      restartPolicy: Always
      initContainers: 
        - name: vehiclemanagementapi
          image: pitstop/vehiclemanagementapi:1.0
          ports: 
            - name: vehicle1
              containerPort: 5000
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Production 
        - name: customermanagementapi
          image: pitstop/customermanagementapi:1.0
          ports: 
            - name: customer1
              containerPort: 5100
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Production 
        - name: workshopmanagementapi
          image: pitstop/workshopmanagementapi:1.0
          ports: 
            - name: work1
              containerPort: 5200
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Production
        - name: auditlogservice
          image: pitstop/auditlogservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
  
        - name: invoiceservice
          image: pitstop/invoiceservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
    
        - name: notificationservice
          image: pitstop/notificationservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
    
        - name: timeservice
          image: pitstop/timeservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
      
        - name: WorkshopManagementEventHandler
          image: pitstop/workshopmanagementeventhandler:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          ports:
            - name: rabbit1
              containerPort: 5672
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: cus-vol
            - name: rabbitmq-config
              mountPath: /etc/pitstop
          env: 
            - name: RABBITMQ_CONFIG_FILE 
              value: /etc/pitstop/rabbitmq.conf
      volumes:
        - name: cus-vol 
          emptyDir:
            medium: ""
            sizeLimit: 5000Mi
        - name: rabbitmq-config
          hostPath:
            path: /path/to/your/local/rabbitmq

---
apiVersion: v1 
kind: Service
metadata:
  name: rabbitmq-svc
spec: 
  type: ClusterIP
  clusterIP: None
  selector:
    env: prod 
  ports: 
    - name: rabbitmq
      port: 5672
      targetPort: 5672

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql 
  labels: 
    env: prod 
spec:
  minReadySeconds: 5
  replicas: 1
  updateStrategy:
    type: RollingUpdate 
    rollingUpdate: 
      maxUnavailable: 10%
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      env: prod 
  serviceName: mysql-svc
  template: 
    metadata:
      name: mysql 
      labels:
        env: prod 
    spec:
      restartPolicy: Always
      initContainers: 
        - name: vehiclemanagementapi
          image: pitstop/vehiclemanagementapi:1.0
          ports: 
            - name: vehicle1
              containerPort: 5000
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Production
      
        - name: customermanagementapi
          image: pitstop/customermanagementapi:1.0
          ports: 
            - name: customer1
              containerPort: 5100
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Production

        - name: workshopmanagementapi
          image: pitstop/workshopmanagementapi:1.0
          ports: 
            - name: work1
              containerPort: 5200
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Production
    
        - name: invoiceservice
          image: pitstop/invoiceservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
    
        - name: notificationservice
          image: pitstop/notificationservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
    
        - name: WorkshopManagementEventHandler
          image: pitstop/workshopmanagementeventhandler:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
      containers:
        - name: mysql 
          image: mysql:8.3.0
          ports:
            - name: mysql
              containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql 
              name: sql-vol 
          env: 
            - name: MYSQL_ROOT_PASSWORD
              value: admin123
            - name: MYSQL_DATABASE
              value: example
            - name: MYSQL_USER
              value: ajay
            - name: MYSQL_PASSWORD
              value: ajay123
              
      volumes:
        - name: sql-vol 
          emptyDir:
            medium: ""
            sizeLimit: 500Mi


---
---
apiVersion: v1 
kind: Service
metadata:
  name: mysql-svc
spec: 
  type: ClusterIP
  clusterIP: None
  selector:
    env: prod 
  ports: 
    - name: mysql
      port: 3306
      targetPort: 3306


---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailserver
  labels:
    env: prod 
spec:
  minReadySeconds: 5
  replicas: 1
  selector: 
    matchLabels: 
      env: prod 
  strategy: 
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 1
  template: 
    metadata:
      name: mailserver
      labels:
        env: prod 
    spec: 
      restartPolicy: Always
      initContainers: 
        - name: invoiceservice
          image: pitstop/invoiceservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
      initContainers1: 
        - name: notificationservice
          image: pitstop/notificationservice:1.0
          env: 
            - name: DOTNETCORE_ENVIRONMENT
              value: Production
      containers: 
        - name: mail1 
          image: maildev/maildev:1.1.0
          resources: 
            limits: 
              cpu: "50m"
              memory: "50Mi"
          ports: 
            - name: mail1 
              containerPort: 25


---

apiVersion: v1
kind: Service
metadata:
  name: mail-svc
  labels: 
    env: prod 
spec: 
  type: ClusterIP
  clusterIP: None
  selector:
    env: prod 
  ports: 
    - name: mail-svc 
      port: 25
      targetPort: 25


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logserver
  labels:
    env: prod 
spec:
  minReadySeconds: 5
  replicas: 1
  selector: 
    matchLabels: 
      env: prod 
  strategy: 
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 1
  template: 
    metadata:
      name: logserver
      labels: 
        env: prod 
    spec: 
      restartPolicy: Always
      containers: 
        - name: log1  
          image: datalust/seq:2024
          ports: 
            - name: log1 
              containerPort: 5341
          resources: 
            limits: 
              cpu: "50m"
              memory: "50Mi"
          env: 
            - name: ACCEPT_EULA
              value: "Y"

---

apiVersion: v1
kind: Service
metadata:
  name: log-svc
  labels: 
    env: prod
spec: 
  type: ClusterIP
  clusterIP: None
  selector:
    env: prod 
  ports: 
    - name: log-svc 
      port: 5341
      targetPort: 5341



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  labels:
    env: prod
  annotations: 
    config.kubernetes.io/depends-on: 
      -/rabbitmq/mysql/CustomerManagementAPI
      -/rabbitmq/mysql/VehicleManagementAPI
      -/rabbitmq/mysql/workshopmanagementapi 
spec:
  minReadySeconds: 5
  replicas: 1
  selector: 
    matchLabels: 
      env: prod 
  strategy: 
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 1
  template: 
    metadata:
      name: webapp
      labels: 
        env: prod 
    spec: 
      restartPolicy: Always
      containers: 
        - name: webapp
          image: pitstop/webapp:1.0
          ports: 
            - name: webapp
              containerPort: 7005
          resources: 
            limits: 
              cpu: "50m"
              memory: "50Mi"
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Production

---


apiVersion: v1
kind: Service
metadata:
  name: web-svc
  labels: 
    env: prod 
spec: 
  type: ClusterIP
  clusterIP: None
  selector:
    env: prod 
  ports: 
    - name: web-svc 
      port: 7005
      targetPort: 7005